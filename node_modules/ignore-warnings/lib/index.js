'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ignoreWarnings;
function ignoreWarnings(type, ignoreMessages) {
  if (!ignoreMessages) {
    ignoreMessages = type;
    type = 'warn';
  }
  if (!Array.isArray(ignoreMessages)) ignoreMessages = [ignoreMessages];
  var overloadedConsole = {
    // eslint-disable-next-line no-console
    log: console.log,
    // eslint-disable-next-line no-console
    info: console.info,
    // eslint-disable-next-line no-console
    warn: console.warn,
    // eslint-disable-next-line no-console
    error: console.error
  };
  // eslint-disable-next-line no-console
  console[type] = function () {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var log = true;
    ignoreMessages.forEach(function (ignoreMessage) {
      var message = args.join(' ').slice(0, -1);
      if (message.indexOf(ignoreMessage) > -1) {
        log = false;
        return false;
      }
      return true;
    });
    if (log) overloadedConsole[type].apply(overloadedConsole, args);
  };
}