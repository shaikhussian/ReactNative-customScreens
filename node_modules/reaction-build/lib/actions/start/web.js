'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _webpackDevServer = require('webpack-dev-server');

var _webpackDevServer2 = _interopRequireDefault(_webpackDevServer);

var _fsExtra = require('fs-extra');

var _fsExtra2 = _interopRequireDefault(_fsExtra);

var _ora = require('ora');

var _ora2 = _interopRequireDefault(_ora);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _webpack = require('webpack');

var _webpack2 = _interopRequireDefault(_webpack);

var _reactionBase = require('reaction-base');

var _clean = require('../clean');

var _clean2 = _interopRequireDefault(_clean);

var _createConfig = require('../../createConfig');

var _createConfig2 = _interopRequireDefault(_createConfig);

var _createWebpackConfig = require('../../create-webpack-config');

var _createWebpackConfig2 = _interopRequireDefault(_createWebpackConfig);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

exports.default = function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(options, config) {
    var spinner, _config, paths, webpackWebConfig, webpackNodeConfig, webStats, clientDevServer;

    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            if (config) {
              _context.next = 6;
              break;
            }

            _context.next = 3;
            return (0, _createConfig2.default)({ defaultEnv: 'development', options });

          case 3:
            config = _context.sent;

            _reactionBase.log.debug('options', options);
            _reactionBase.log.debug('config', config);

          case 6:
            if (!options.clean) {
              _context.next = 9;
              break;
            }

            _context.next = 9;
            return (0, _clean2.default)(options, config);

          case 9:
            spinner = (0, _ora2.default)('starting web').start();
            _config = config, paths = _config.paths;

            _fsExtra2.default.removeSync(_path2.default.resolve(paths.dist, 'assets.json'));
            webpackWebConfig = (0, _createWebpackConfig2.default)('web', 'start', config);

            _reactionBase.log.debug('webpackWebConfig', webpackWebConfig);
            webpackNodeConfig = (0, _createWebpackConfig2.default)('node', 'start', config);

            _reactionBase.log.debug('webpackNodeConfig', webpackNodeConfig);
            process.noDeprecation = true;
            (0, _webpack2.default)(webpackNodeConfig).watch({
              quiet: true,
              stats: 'none'
            }, function (err) {
              if (err) _reactionBase.log.error(err);
              spinner.stop();
            });
            webStats = (0, _webpack2.default)(webpackWebConfig);
            clientDevServer = new _webpackDevServer2.default(webStats, webpackWebConfig.devServer);

            clientDevServer.listen(config.ports.dev, 'localhost', function (err) {
              if (err) _reactionBase.log.error(err);
            });

          case 21:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  function startWeb(_x, _x2) {
    return _ref.apply(this, arguments);
  }

  return startWeb;
}();