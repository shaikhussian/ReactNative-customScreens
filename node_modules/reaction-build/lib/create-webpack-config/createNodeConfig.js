'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = createNodeConfig;

var _startServerWebpackPlugin = require('start-server-webpack-plugin');

var _startServerWebpackPlugin2 = _interopRequireDefault(_startServerWebpackPlugin);

var _webpack = require('webpack');

var _webpack2 = _interopRequireDefault(_webpack);

var _webpackNodeExternals = require('webpack-node-externals');

var _webpackNodeExternals2 = _interopRequireDefault(_webpackNodeExternals);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var LimitChunkCountPlugin = _webpack2.default.optimize.LimitChunkCountPlugin;
function createNodeConfig(webpackConfig, action, config) {
  var paths = config.paths,
      host = config.host,
      ports = config.ports,
      options = config.options;

  webpackConfig = _extends({}, webpackConfig, {
    entry: [paths.server],
    output: {
      path: paths.dist,
      publicPath: action === 'start' ? `http://${host}:${ports.dev}/` : '/',
      filename: 'server.js'
    },
    node: {
      console: true,
      __filename: true,
      __dirname: true
    },
    externals: _extends({}, webpackConfig.externals, (0, _webpackNodeExternals2.default)({
      whitelist: [].concat(_toConsumableArray(action === 'start' ? ['webpack/hot/poll?300'] : []), [/\.(eot|woff|woff2|ttf|otf)$/, /\.(svg|png|jpg|jpeg|gif|ico)$/, /\.(mp4|mp3|ogg|swf|webp)$/])
    }), {
      'reaction-base/lib/assets': "require('./assets.json')"
    }),
    plugins: [].concat(_toConsumableArray(webpackConfig.plugins), [new LimitChunkCountPlugin({
      maxChunks: 1
    })])
  });
  if (action === 'start') {
    webpackConfig = _extends({}, webpackConfig, {
      watch: true,
      entry: [].concat(_toConsumableArray(webpackConfig.entry), ['webpack/hot/poll?300']),
      plugins: [].concat(_toConsumableArray(webpackConfig.plugins), [new _startServerWebpackPlugin2.default({
        name: 'server.js',
        nodeArgs: [].concat(_toConsumableArray(options.inspect ? ['--inspect'] : []), _toConsumableArray(options.inspectBrk ? ['--inspect-brk'] : []))
      })])
    });
  }
  return webpackConfig;
}